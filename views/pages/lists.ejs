<%- include ('../partials/header') %>

<main>
  <%- include ('../partials/menu') %>

  <form action="/changeListView" method="POST">
    <% if(listViewType == 'column' ) { %>
      <button title="Switch to row view" class="btn zoom" style="padding:2px;padding-top:0px;padding-bottom:0px;position:absolute;top:150px;left:25px;border-color:#000000;background-color:#ececec;">
        <img src="/img/row.png" style="width:15px">
      </button>
    <% } else if(listViewType == 'row' ) { %>
      <button title="Switch to column view" class="btn zoom" style="padding:2px;padding-top:0px;padding-bottom:0px;position:absolute;top:150px;left:25px;border-color:#000000;background-color:#ececec;">
        <img src="/img/column.png" style="width:15px">
      </button>
    <% } %>
  </form>

  <div class="text-center" style="padding-top:80px;color:#f289ca">
    <% if(search) { %>
      <h4 class="site-title">lists</h4>
      <h6 class="site-title">search results</h6>
    <% } else if(filterByLabel) { %>
      <h4 class="site-title">
        <%= label %>
      </h4>
      <h6 class="site-title">label</h6>
      <% if(searchInLabel) { %>
        <h6 class="site-title">search results</h6>
      <% } %>
    <% } else { %>
      <h4 class="site-title">lists</h4>
    <% } %>

    <div style="padding-top:5px;padding-bottom:5px">
      <% if(filterByLabel) { %>
        <form action="/search?searchInLabel=true&labelId=<%= labelid %>" method="POST" onsubmit="saveQuery()">
          <input class="form-control" name="label" value="<%= label %>" hidden>
          <input type="text" id="q" name="q" class="search-hover zoom" placeholder="Search this label...">
          <input type="submit" hidden>
      <% } else { %>
        <form action="/search" method="POST" onsubmit="saveQuery()">
        <input type="text" id="q" name="q" class="search-hover zoom" placeholder="Search all...">
      <% } %>
      </form>
    </div>

    <div style="padding-top:10px;">
      <% if(filterByLabel) { %>
        <button title="New list with this label" data-id="<%= labelid %>" data-bs-toggle="modal" data-bs-target="#exampleModal" type="button" href="#addListModal" data-toggle="modal" class="btn rounded-10 zoom" style="border-color:#f289ca;background-color:#ffe6ee;padding: .25rem .4rem;line-height: .75;">
          +
        </button>
      <% } else { %>
        <button title="New list" data-bs-toggle="modal" data-bs-target="#exampleModal" type="button" href="#addListModal" data-toggle="modal" class="btn rounded-10 zoom" style="border-color:#f289ca;background-color:#ffe6ee;padding: .25rem .4rem;line-height: .75;">
          +
        </button>
      <% } %>
    </div>

    <% if(lists.length == 0) { %>
      <p id="listCount" style="font-size:12px;padding-top:16px">No lists</p>
    <% } else if(lists.length == 1) { %>
      <p id="listCount" style="font-size:12px;padding-top:16px">1 list</p>
    <% } else { %>
      <p id="listCount" style="font-size:12px;padding-top:16px">
        <%= lists.length %> lists
      </p>
    <% } %>

    <div style="position:absolute;top:150px;left:60px">
      <div>
        <button disabled id="numSelectedLists" class="btn" style="font-weight:bold;font-size:12px;border-radius:10;background-color:#e8fcec;color:black;border-color:#17d475;display: none;padding-left:20px">
          <button onclick="unselectAll()" title="Unselect all" id="unselectAll" class="btn" style="position:absolute;bottom:48px;left:2px;padding:0;display: none;z-index: 2;">
            <img src="/img/x.png" style="width:10px" onmouseover="hover(this, 'pinkX')" onmouseout="unhover(this, 'x')">
          </button>
        </button>
      </div>

      <div style="padding-top:10px;">
        <form action="/deleteSelectedLists" method="POST">
          <input class="timeInput" class="form-control" name="now" hidden>
          <button title="Delete selected" id="delSelectedLists" name="listIds" class="btn rounded-10 zoom" style="border-color:#fb6f92;background-color:#ffe5ec;padding: 0;line-height: .25;width:20px;display: none;">
            <img src="/img/trash.png" style="width:15px" onmouseover="hover(this, 'trashPink')" onmouseout="unhover(this, 'trash')">
          </button>
        </form>
      </div>

      <div style="padding-top:10px;">
        <form action="/copySelected" method="POST">
          <input class="timeInput" class="form-control" name="now" hidden>
          <button id="copySelected" name="listIds" title="Copy selected" class="btn rounded-10 zoom" style="position:absolute;bottom:8px;left:25px;background-color:white;padding: 0px;line-height: .25;width:20px;display: none;">
            <img src="/img/copy.png" style="width:20px" onmouseover="hover(this, 'copyBlue')" onmouseout="unhover(this, 'copy')">
          </button>
        </form>
      </div>

      <form action="/archiveSelected" method="POST">
        <button id="archiveSelected" name="listIds" title="Archive selected" class="btn rounded-10 zoom" style="background-color:white;position:absolute;bottom:9px;left:74px;padding: 0px;line-height: .25;width:20px;display:none">
          <img src="/img/archive.png" style="width:20px" onmouseover="hover(this, 'archiveGreen')" onmouseout="unhover(this, 'archive')">
        </button>
      </form>

      <button id="setColorSelected" name="listIds" title="Set color of selected" type="button" class="btn rounded-10 zoom" data-bs-toggle="modal" data-bs-target="#setColorSelectedModal" style="display:none;background-color:white;position:absolute;bottom:9px;left:48px;padding: 0px;line-height: .25;width:20px">
        <img src="/img/palette.png" style="width:20px" onmouseover="hover(this, 'paletteColors')" onmouseout="unhover(this, 'palette')">
      </button>

    </div>
  </div>

    <div class="modal modal-lg" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content rounded-10">
          <% if(filterByLabel) { %>
            <form action="/addListWithThisLabel" method="POST">
            <input class="form-control" id="labelId" name="labelId" value="" hidden>
          <% } else { %>
            <form action="/addList" method="POST">
          <% } %>
            <input class="timeInput" class="form-control" name="now" hidden>
            <input tabindex="-1" class="form-control rounded-10 text-center" type="text" maxlength="50" name="title" placeholder="Add a title...">
            <div class="text-center" style="padding-bottom:4px">
              <button data-bs-toggle="tooltip" data-bs-placement="top" data-bs-custom-class="small-tooltip" data-bs-title="Be sure to save. Autosave is currently unavailable." class="logo btn rounded-10" style="border-color:#17d475;background-color:#e8fcec;padding: .25rem .4rem;line-height: .75;width:50px">
                Save
              </button>
            </div>

            <textarea name="list" id="textarea" class="form-control rounded-10"></textarea>
          </form>
        </div>
      </div>
    </div>

  </div>

  <div id="overflowArrowRight" class="zoom" style="display:none;position:absolute;right:20px;top:220px">
    <img src="/img/rightArrow.png" style="width:30px" onmouseover="hover(this, 'rightArrowPink')" onmouseout="unhover(this, 'rightArrow')">
  </div>

  <div id="overflowArrowLeft" class="zoom" style="display:none;position:absolute;left:20px;top:220px">
    <img src="/img/leftArrow.png" style="width:30px" onmouseover="hover(this, 'leftArrowPink')" onmouseout="unhover(this, 'leftArrow')">
  </div>

  <div class="row" id="list" style="overflow:auto;padding-top:0px;padding-left:20px;display:block">
    <!-- <div class="row" id="list" style="overflow-x:scroll;padding-top:0px;padding-left:20px;display:block"> -->

    <% if(listViewType == 'column') { %>
      <div class="d-flex" >
        <%- include ('../partials/listColumns') %>
        <div style="padding-right:20px"></div>
      </div>
      <div style="padding-top:20px"></div>

    <% } else { %>
      <div class="row" style="padding-top: 0px;">
        <%- include ('../partials/listRows') %>
        
      </div>
      
    <% } %>
  </div>

  <% if((search || filterByLabel) && lists.length == 0) { %>
    <div class="text-center">
  <% if(filterByLabel) { %>
      <h6><b>Note:</b> search does not show labeled lists that may be in trash.</h6>
  <% } %>
      <img style="width:100px" src="/img/noResults.png">
    </div>
  <% } else if(lists.length == 0) { %>
    <div class="text-center" style="padding-top:20px">
      <img style="width:100px" src="/img/palmTree.png">
    </div>
  <% } %>

  <div class="modal fade" id="listColors" tabindex="-1" aria-labelledby="listColors" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content mx-auto" style="width:202px">
        <form action="/changeListColor" method="POST">
          <input id="modalListId" name="listId" value="" hidden>
          <input class="timeInput" class="form-control" name="now" hidden>

          <button class="btn zoomSmall" name="color" value="ffffff" style="padding-right:0"><img id="ffffff" src="/img/colors/ffffffSelected.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="fdf5c1" style="padding-right:0"><img id="fdf5c1" src="/img/colors/yellow.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="bae6fc" style="padding-right:0"><img id="bae6fc" src="/img/colors/lightBlue.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="cafbc8" style="padding-right:0"><img id="cafbc8" src="/img/colors/green.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="f4c3fb" style="padding-right:0"><img id="f4c3fb" src="/img/colors/pink.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="eeeeee" style="padding-right:0"><img id="eeeeee" src="/img/colors/grey.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="f7cdc2" style="padding-right:0"><img id="f7cdc2" src="/img/colors/orange.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="b4c9fa" style="padding-right:0"><img id="b4c9fa" src="/img/colors/lavender.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="bdf6d9" style="padding-right:0"><img id="bdf6d9" src="/img/colors/greenBlue.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="d0adfa"><img id="d0adfa" src="/img/colors/purple.png" style="width:20px"></button>
        </form>
      </div>
    </div>
  </div>

  <div class="modal fade" id="setColorSelectedModal" tabindex="-1" aria-labelledby="setColorSelectedModal" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content mx-auto" style="width:202px">
        <form action="/setColorSelected" method="POST">
          <input id="setColorSelectedListIds" name="listIds" value="" hidden>
          <input class="timeInput" class="form-control" name="now" hidden>

          <button class="btn zoomSmall" name="color" value="ffffff" style="padding-right:0"><img id="ffffff" src="/img/colors/white.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="fdf5c1" style="padding-right:0"><img id="fdf5c1" src="/img/colors/yellow.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="bae6fc" style="padding-right:0"><img id="bae6fc" src="/img/colors/lightBlue.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="cafbc8" style="padding-right:0"><img id="cafbc8" src="/img/colors/green.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="f4c3fb" style="padding-right:0"><img id="f4c3fb" src="/img/colors/pink.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="eeeeee" style="padding-right:0"><img id="eeeeee" src="/img/colors/grey.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="f7cdc2" style="padding-right:0"><img id="f7cdc2" src="/img/colors/orange.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="b4c9fa" style="padding-right:0"><img id="b4c9fa" src="/img/colors/lavender.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="bdf6d9" style="padding-right:0"><img id="bdf6d9" src="/img/colors/greenBlue.png" style="width:20px"></button>
          <button class="btn zoomSmall" name="color" value="d0adfa"><img id="d0adfa" src="/img/colors/purple.png" style="width:20px"></button>
        </form>
      </div>
    </div>
  </div>
</main>


<script>



  tinymce.init({
    selector: 'textarea',
    height: 600,
    plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount  ',
    toolbar: 'blocks fontfamily fontsize | bold italic underline strikethrough forecolor backcolor | link image media table | spellcheckdialog | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat',
    image_list: [
      { title: 'My image 1', value: 'http://t2.gstatic.com/licensed-image?q=tbn:ANd9GcQOO0X7mMnoYz-e9Zdc6Pe6Wz7Ow1DcvhEiaex5aSv6QJDoCtcooqA7UUbjrphvjlIc' },
      { title: 'My image 2', value: 'http://www.moxiecode.com/my2.gif' }
    ],
    tinycomments_mode: 'embedded',
    tinycomments_author: 'Author name',
    mergetags_list: [
      { value: 'First.Name', title: 'First Name' },
      { value: 'Email', title: 'Email' },
    ],

    setup: function(editor) {
      var max = 20000;
      editor.on('submit', function (event) {
        var numChars = tinymce.activeEditor.plugins.wordcount.body.getCharacterCount();
        if(numChars > max) {
          alert("Maximum " + max + " characters allowed.");
          event.preventDefault();
          return false;
        }
      });
    }
  });






document.getElementById('listColors').addEventListener('show.bs.modal', (e) => {
    // console.log(e.relatedTarget);
    // console.log(e.relatedTarget.dataset.id);

    // var element = document.createElement("div");
    // element.innerHTML = e.relatedTarget.dataset.id;
    // document.getElementById('listColorsContent').appendChild(element);  
    // document.getElementById('modalListId').innerHTML = e.relatedTarget.dataset.id;

    document.getElementById('modalListId').value = e.relatedTarget.dataset.id;
    // console.log(document.getElementById('modalListId').value);



});




document.getElementById('setColorSelectedModal').addEventListener('show.bs.modal', (e) => {
    document.getElementById('setColorSelectedListIds').value = e.relatedTarget.dataset.id;
});


////////
document.getElementById('exampleModal').addEventListener('show.bs.modal', (e) => {
    document.getElementById('labelId').value = e.relatedTarget.dataset.id;
  });


function setSelectedColor(color) {
  var imgs = ['white','yellow','orange','green','greenBlue','lightBlue','lavender','pink','purple','grey'];
        var ids = ['ffffff','fdf5c1','f7cdc2','cafbc8','bdf6d9','bae6fc','b4c9fa','f4c3fb','d0adfa', 'eeeeee']; 

    for(var i = 0; i < 10; i++) {

            document.getElementById(ids[i]).src='/img/colors/'+imgs[i]+'.png';
        }
        
  document.getElementById(color).src = '/img/colors/'+color+'Selected.png';





          
}


function setListCount(n) {
  var element = document.getElementById('listCount');
  if(n == 0) {
    element.innerHTML = n+' lists';
  }
  else if(n == 1) {
    element.innerHTML = n+' list';
  } else if(n > 1){
    element.innerHTML = n+' lists';
  }
  else {
    element.innerHTML = '';
  }
}


function changeImage(element, img1, img2) {
  if(element.getAttribute('src') == '/img/'+img1+'.png') {
    element.setAttribute('src', '/img/'+img2+'.png');
  }
  else {
    element.setAttribute('src', '/img/'+img1+'.png');
  }  

  countSelectedLists();
}

function countSelectedLists() {
  const elements = document.getElementsByClassName('listSelector');
  
  var n = 0;
  var selectedListIds = [];
  for(var i = 0; i < elements.length; i++) {
    // console.log(elements[i].src)
    // console.log(window.location.origin+'/img/colors/ffffffSelected.png');
    if(elements[i].src == window.location.origin+'/img/colors/ffffffSelected.png') {
      n++;
      // console.log(elements[i].parentElement.value);
      selectedListIds.push(elements[i].parentElement.value);
    }
  }

  // console.log('num selected: '+n);
  // for(var i=0; i < selectedListIds.length;i++) {
  //   console.log(selectedListIds[i]);
  // }


  if(n >0) {
document.getElementById('numSelectedLists').innerHTML = n+' selected';
document.getElementById('numSelectedLists').style.display = 'block';

document.getElementById('delSelectedLists').style.display = 'block';
document.getElementById('delSelectedLists').value = selectedListIds;


document.getElementById('copySelected').style.display = 'block';
document.getElementById('copySelected').value = selectedListIds;


document.getElementById('setColorSelected').style.display = 'block';
document.getElementById('setColorSelected').setAttribute('data-id' , selectedListIds); 



document.getElementById('archiveSelected').style.display = 'block';
document.getElementById('archiveSelected').value = selectedListIds;



//////
// document.getElementById('delSelectedLists').setAttribute('data-id' , selectedListIds); 

// document.getElementById('restoreSelectedLists').style.display = 'block';
// document.getElementById('restoreSelectedLists').value = selectedListIds;
//////


// console.log(document.getElementById('delSelectedLists').value);

document.getElementById('unselectAll').style.display = 'block';




  } else {
    document.getElementById('numSelectedLists').style.display = 'none';
    // document.getElementById('numSelectedLists').innerHTML = '';

    document.getElementById('delSelectedLists').style.display = 'none';

    document.getElementById('copySelected').style.display = 'none';

    document.getElementById('setColorSelected').style.display = 'none';

    
    document.getElementById('archiveSelected').style.display = 'none';


    


    document.getElementById('unselectAll').style.display = 'none';
    



  }
  
}

function unselectAll() {
  var selected = document.querySelectorAll('[src="/img/colors/ffffffSelected.png"]');

  // console.log(selected[0].src);

  for(var i = 0; i < selected.length; i++) {
    selected[i].src = '/img/colors/white.png';
  }

  countSelectedLists();
  
  
}

  function hover(element, src) {
  element.setAttribute('src', '/img/'+src+'.png');
  console.log(element);
 if(src !== 'paletteColors' && src !== 'addCollaboratorBlue' && element.id !== 'confirmDeleteShared') {
  stopModals();
 }
}

function unhover(element, src) {
  element.setAttribute('src', '/img/'+src+'.png');
  startModals();
}





function setInnerHtml(element, text) {
  if(text == 'x') {
   


    var length = element.clientWidth*.28;
    var s = '';
    for(var i = 0; i < length/2; i++) {
    s += '&nbsp;';
    }
    s += text;
    for(var i = 0; i < length/2; i++) {
    s += '&nbsp;';
    }
    // console.log(s);
    element.innerHTML = s;
    element.style.color = 'red';
    stopModals();

  }
  else {
    element.innerHTML = text;
    element.style.color = '#03a9f4';
    startModals();

  }
}

// var nSelected = 0;
// for(var i = 0; i < lists.length; i++) {
//       if(document.getElementById('listSelector').src='/img/colors/ffffffSelected.png') {
//         nSelected++;
//       }
// }

// console.log(nSelected);



  
  function changeListColor(val, id, listId){
    var targetId = document.getElementById('modalListId').value;
    // console.log(targetId);
    var list = document.getElementById(targetId).style.backgroundColor = val;

        // var list = document.getElementById(listId);
        // list.style.backgroundColor = val;

        // document.body.style.backgroundColor = val;



        
        var imgs = ['white','yellow','orange','green','greenBlue','lightBlue','lavender','pink','purple'];
        var ids = ['whiteSelected','yellowSelected','orangeSelected','greenSelected','greenBlueSelected','lightBlueSelected','lavenderSelected','pinkSelected','purpleSelected']; 

        for(var i = 0; i < 10; i++) {
            // document.getElementById(ids[i]).src='/img/colors/'+imgs[i]+'.png';
        }

        // document.getElementById(id).src='/img/colors/'+id+'.png';
    }








    document.addEventListener("keydown", function(e) {

  if(!e.metaKey || e.metaKey && e.keyCode == 82 || e.metaKey && e.keyCode == 87) {
    return true;
  }
  e.preventDefault();

  var selectedListIds = [];


  if(e.metaKey && e.keyCode == 65) {
    // console.log('cmd a')

    const elements = document.getElementsByClassName('listSelector');
  
  for(var i = 0; i < elements.length; i++) {
    
    if(elements[i].src !== window.location.origin+'/img/colors/ffffffSelected.png') {
      // console.log(elements[i].parentElement.value);
      elements[i].src = '/img/colors/ffffffSelected.png';
    }
    selectedListIds.push(elements[i].parentElement.value);

  } 

  // console.log(selectedListIds)

}
  


  if(selectedListIds.length > 0) {
  document.getElementById('numSelectedLists').innerHTML = selectedListIds.length+' selected';
document.getElementById('numSelectedLists').style.display = 'block';

document.getElementById('delSelectedLists').style.display = 'block';
document.getElementById('delSelectedLists').value = selectedListIds;


document.getElementById('copySelected').style.display = 'block';
document.getElementById('copySelected').value = selectedListIds;


document.getElementById('setColorSelected').style.display = 'block';
document.getElementById('setColorSelected').setAttribute('data-id' , selectedListIds); 

document.getElementById('archiveSelected').style.display = 'block';
document.getElementById('archiveSelected').value = selectedListIds;


//////
// document.getElementById('delSelectedLists').setAttribute('data-id' , selectedListIds); 
// document.getElementById('restoreSelectedLists').style.display = 'block';
// document.getElementById('restoreSelectedLists').value = selectedListIds;

/////

document.getElementById('unselectAll').style.display = 'block';



// console.log(document.getElementById('delSelectedLists').value);
  }
  
  // if (e.keyCode >= 65 && e.keyCode <= 90) {
  //   var char = (e.metaKey ? '⌘-' : '') + String.fromCharCode(e.keyCode)
  //   // document.getElementById('keydown').innerHTML += '<kbd>' + char + '</kbd>'
    
  // }
})


// window.onload = function() {
//   var element = document.getElementById('n');
//   console.log(element);

//   var val = element.value;
//   console.log(val);
//   setListCount(val);
// };


// window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
//     const newColorScheme = event.matches ? "dark" : "light";
// });

// if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
//     // dark mode
//     // document.body.backgroundColor = 'black';
//     console.log('dark mode is on');
//     document.body.style.backgroundColor = "black";

// }
// else {
//   console.log('dark mode is off');
// }




function setEditTimes() {
  const elements = document.getElementsByClassName('editTime');
  // var elements = document.querySelectorAll('[var="editTime"]');


  for(var i = 0; i < elements.length; i++) {
    
    // console.log(elements[i].id);
    // console.log(elements[i].dataset.value);
   
    setTimeEdited(elements[i].dataset.value, elements[i].id);

  }
}


function setCreateTimes() {
  const elements = document.getElementsByClassName('createTime');
  // var elements = document.querySelectorAll('[var="editTime"]');





  for(var i = 0; i < elements.length; i++) {
    
    // console.log(elements[i].id);
    // console.log(elements[i].dataset.value);
   
    setTimeCreated(elements[i].dataset.value, elements[i].id);

  }
}


function setTimeEdited(editDateTime, divId) {
  var now = new Date();
  var nowYear = parseInt(now.getFullYear());
  var nowMonth = parseInt(now.getMonth()+1);
  var nowDate = parseInt(now.getDate());



  var thenYear = parseInt(editDateTime.substring(6,10));
  var thenMonth = parseInt(editDateTime.substring(0,2));
  var thenDate = parseInt(editDateTime.substring(3,5));
  var thenHour = parseInt(editDateTime.substring(11,13));
  var thenMin = parseInt(editDateTime.substring(14));


  var ampm = 'AM';

  if(thenHour >= 12) {
    ampm = 'PM';

    if(thenHour > 12) {
        thenHour -= 12;

    }
  }

  if(thenHour == 0) {
    thenHour = 12;
  }

  var thenMinutesFormatted = (thenMin < 10) ? '0' + thenMin : thenMin;
      
  var thenTime = thenHour + ':' + thenMinutesFormatted + ' ' + ampm;


  const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  const thenMonthAbbr = months[thenMonth-1];

  // var thenDateFormatted = (thenDate < 10) ? '0' + thenDate : thenDate;
  var thenDateFormatted = thenDate;

  if(nowYear > thenYear) {
    var message = 'Edited ' + thenMonthAbbr + ' ' + thenDateFormatted  + ', ' + thenYear + ' at ' + thenTime;
    // var message = 'Edited ' + thenMonthAbbr + ' ' + thenDateFormatted + ' ' + thenYear;
    document.getElementById(divId).innerHTML = message;
  }
  else if(nowYear == thenYear && nowMonth == thenMonth && nowDate == thenDate) {
      var message = 'Edited today at ' + thenTime;
      document.getElementById(divId).innerHTML = message;
  }
  else if(nowYear == thenYear && nowMonth == thenMonth && nowDate == (thenDate+1)) {
      var message = 'Edited yesterday at ' + thenTime;
      document.getElementById(divId).innerHTML = message;
  }
  else if(nowYear == thenYear && nowMonth >= thenMonth && nowDate > (thenDate+1)) {
      // var message = 'Edited ' + thenMonthAbbr + ' ' + thenDateFormatted;
      var message = 'Edited ' + thenMonthAbbr + ' ' + thenDateFormatted  + ', ' + thenYear + ' at ' + thenTime;
      document.getElementById(divId).innerHTML = message;
  }
  else {
      var message = 'Edited: error';
      document.getElementById(divId).innerHTML = message;
  }
}


function setTimeCreated(createDateTime, divId) {
  var now = new Date();
  var nowYear = parseInt(now.getFullYear());
  var nowMonth = parseInt(now.getMonth()+1);
  var nowDate = parseInt(now.getDate());



  var thenYear = parseInt(createDateTime.substring(6,10));
  var thenMonth = parseInt(createDateTime.substring(0,2));
  var thenDate = parseInt(createDateTime.substring(3,5));
  var thenHour = parseInt(createDateTime.substring(11,13));
  var thenMin = parseInt(createDateTime.substring(14));


  var ampm = 'AM';

  if(thenHour >= 12) {
    ampm = 'PM';

    if(thenHour > 12) {
        thenHour -= 12;

    }
  }

  if(thenHour == 0) {
    thenHour = 12;
  }

  var thenMinutesFormatted = (thenMin < 10) ? '0' + thenMin : thenMin;
      
  var thenTime = thenHour + ':' + thenMinutesFormatted + ' ' + ampm;


  const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  const thenMonthAbbr = months[thenMonth-1];

  // var thenDateFormatted = (thenDate < 10) ? '0' + thenDate : thenDate;
  var thenDateFormatted = thenDate;

  if(nowYear > thenYear) {
    var message = 'Created ' + thenMonthAbbr + ' ' + thenDateFormatted  + ', ' + thenYear + ' at ' + thenTime;
    // document.getElementById(divId).setAttribute('data-bs-title', message);
  }
  else if(nowYear == thenYear && nowMonth == thenMonth && nowDate == thenDate) {
      var message = 'Created today at ' + thenTime;
      // document.getElementById(divId).innerHTML = message;
  }
  else if(nowYear == thenYear && nowMonth == thenMonth && nowDate == (thenDate+1)) {
      var message = 'Created yesterday at ' + thenTime;
      // document.getElementById(divId).innerHTML = message;
  }
  else if(nowYear == thenYear && nowMonth >= thenMonth && nowDate > (thenDate+1)) {
      var message = 'Created ' + thenMonthAbbr + ' ' + thenDateFormatted  + ', ' + thenYear + ' at ' + thenTime;
      // document.getElementById(divId).innerHTML = message;
  }
  else {
      var message = 'Created: error';
      // document.getElementById(divId).innerHTML = message;
  }
  message += document.getElementById('creatorName').value;
  document.getElementById(divId).setAttribute('data-bs-title', message);
}



setEditTimes();
setCreateTimes();
setInputTimes();

setInterval(setEditTimes, 3000);
setInterval(setCreateTimes, 3000);
setInterval(setInputTimes, 3000);






function setInputTimes() {
  const elements = document.getElementsByClassName('timeInput');
  // var elements = document.querySelectorAll('[var="editTime"]');


  for(var i = 0; i < elements.length; i++) {
    
    // console.log(elements[i].id);
    // console.log(elements[i].dataset.value);
   
    // setTimeEdited(elements[i].dataset.value, elements[i].id);

    elements[i].value = getNowFormatted();
    // console.log(elements[i].value);


  }
}



function getNowFormatted() {
    var now = new Date();

    // console.log(now);

    var nowYear = now.getFullYear();
    var nowMonth = parseInt(now.getMonth()+1);
    var nowDate = now.getDate();
    var nowHours = now.getHours();
    var nowMinutes = now.getMinutes();

    var nowSeconds = now.getSeconds();

    var monthFormatted = (nowMonth < 10) ? '0' + nowMonth : nowMonth;
    var dateFormatted = (nowDate < 10) ? '0' + nowDate : nowDate;
    var hoursFormatted = (nowHours < 10) ? '0' + nowHours : nowHours;
    var minutesFormatted = (nowMinutes < 10) ? '0' + nowMinutes : nowMinutes;

    var secondsFormatted = (nowSeconds < 10) ? '0' + nowSeconds : nowSeconds;

    var nowFormatted = monthFormatted + '-' + dateFormatted + '-' + nowYear + ',' + hoursFormatted + ':' + minutesFormatted + ':' + secondsFormatted;
    
    // console.log(nowFormatted);

    return nowFormatted;
}



// console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)
// var offset = new Date().getTimezoneOffset();
// console.log(offset/-60);
// console.log(new Date())







        document.addEventListener("DOMContentLoaded", function(){
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function(element){
                return new bootstrap.Tooltip(element);
            });
        });


    



        function stopModals() {
  var modalBtns = document.querySelectorAll('[data-bs-toggle="modal"]');
  for(var i = 0; i < modalBtns.length; i++) {
    modalBtns[i].setAttribute('data-bs-toggle', '');
  }

}

function startModals() {
  var modalBtns = document.querySelectorAll('[data-bs-toggle=""]');
  for(var i = 0; i < modalBtns.length; i++) {
    modalBtns[i].setAttribute('data-bs-toggle', 'modal');
  }

}



// function showOrHideModal(x) {
//   var e = document.getElementById('searchResultsModal');
//   console.log(e);

//   if(x == 'show') {

//     e.classList.add("show");
//     e.style.display = "block";
//     console.log(e);

//   }
//   else {
//     e.classList.remove("show");
//     e.style.display = "none";
//     console.log(e);

//   }
// }


function isOverflown(element) {
  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;
}

function addButtonsIfOverflown() {
  var element = document.getElementById('list');

  if(isOverflown(element)) {
    document.getElementById('overflowArrowRight').style.display = 'block';
    document.getElementById('overflowArrowLeft').style.display = 'block';

  }

  if(element.scrollLeft == (element.scrollWidth - element.clientWidth)) {
    document.getElementById('overflowArrowRight').style.display = 'none';
  }
  if(element.scrollLeft == 0) {
    document.getElementById('overflowArrowLeft').style.display = 'none';
  }
}

const rightArrow = document.getElementById('overflowArrowRight');
rightArrow.onclick = function () {
      document.getElementById('list').scrollLeft += 200;
};


const leftArrow = document.getElementById('overflowArrowLeft');
leftArrow.onclick = function () {
      document.getElementById('list').scrollLeft -= 200;
};

addButtonsIfOverflown();
setInterval(addButtonsIfOverflown, 1000);






function highlight(string, strToHighlight){
   var reg = new RegExp(strToHighlight, 'gi');
   return string.replace(reg, function(str) {return '<span style="background-color:#00ffab;">'+str+'</span>'});
}

function highlightResults(resultClass, q) {
  var results = document.getElementsByClassName(resultClass);
  
  for(var i = 0; i < results.length; i++) {
    results[i].innerHTML = highlight(results[i].innerHTML, q);
  }
}
// console.log(highlight('everything Im not made me everything i am', 'I am'));

function saveQuery() {
  localStorage.setItem("q", document.getElementById('q').value);
  // return document.getElementById('q').value;
  // window.location.pathname == '/search'
  // if(true) {
  //   console.log('yes');
  //   var q = document.getElementById('q').value;
  //   console.log(document.getElementById('q').value)
  //   // highlightResults('result', 'I am');
  //   highlightResults('result', q);

  // }
}

// var someVarName = "value";
// if(window.location.pathname == '/search') {
// localStorage.setItem("q", h());
// }

// console.log(h());

 // 
  if(window.location.pathname == '/search') {
    // console.log(localStorage.getItem("q"));
    // console.log('yes');
    // var q = document.getElementById('q').value;
    // console.log(document.getElementById('q').value)
    // highlightResults('result', 'I am');
    highlightResults('result', localStorage.getItem("q"));
  }



</script>

<%- include ('../partials/footer') %>